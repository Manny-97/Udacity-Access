Question 1
We want to understand more about the movies that families are watching. The following categories are considered family movies: Animation, Children, Classics, Comedy, Family and Music.
Create a query that lists each movie, the film category it is classified in, and the number of times it has been rented out.
Query:
SELECT f.title AS film_title,
       c.name AS category_name,
       COUNT(*) AS rental_count
FROM film f
JOIN film_category fc ON fc.film_id = f.film_id
JOIN category c ON c.category_id = fc.category_id
JOIN inventory i ON i.film_id = f.film_id
JOIN rental r ON r.inventory_id = i.inventory_id
WHERE c.name IN ('Animation',
                 'Children',
                 'Classics',
                 'Comedy',
                 'Family',
                 'Music')
GROUP BY 1,
         2
ORDER BY 2,
         1;


Question 2
Now we need to know how the length of rental duration of these family-friendly movies compares to the duration that all movies are rented for. Can you provide a table with the movie titles and divide them into 4 levels (first_quarter, second_quarter, third_quarter, and final_quarter) based on the quartiles (25%, 50%, 75%) of the rental duration for movies across all categories? Make sure to also indicate the category that these family-friendly movies fall into.
Query:
SELECT f.title,
       c.name,
       f.rental_duration,
       NTILE(4) OVER (
                      ORDER BY f.rental_duration) AS standard_quartile
FROM film f
JOIN film_category fc ON fc.film_id = f.film_id
JOIN category c ON c.category_id = fc.category_id
WHERE c.name IN ('Animation',
                 'Children',
                 'Classics',
                 'Comedy',
                 'Family',
                 'Music')
ORDER BY 4;


Question 3
Finally, provide a table with the family-friendly film category, each of the quartiles, and the corresponding count of movies within each combination of film category for each corresponding rental duration category. The resulting table should have three columns:
* Category
* Rental length category
* Count
Query:
​​SELECT t1.name AS category_name,
       t1.standard_quartile AS rental_length_category,
       COUNT(t1.standard_quartile) AS cental_count
FROM
  (SELECT f.title,
          c.name,
          f.rental_duration,
          NTILE(4) OVER (
                         ORDER BY f.rental_duration) AS standard_quartile
   FROM film f
   JOIN film_category fc ON fc.film_id = f.film_id
   JOIN category c ON c.category_id = fc.category_id
   WHERE c.name IN ('Animation',
                    'Children',
                    'Classics',
                    'Comedy',
                    'Family',
                    'Music') ) t1
GROUP BY 1,
         2
ORDER BY 1,
         2;




SET 2
Question 1
We want to find out how the two stores compare in their count of rental orders during every month for all the years we have data for. Write a query that returns the store ID for the store, the year and month and the number of rental orders each store has fulfilled for that month. Your table should include a column for each of the following: year, month, store ID and count of rental orders fulfilled during that month.


Query:
SELECT DATE_PART('month', r.rental_date) rental_month,
       DATE_PART('year', r.rental_date) rental_year,
       sf.store_id,
       COUNT(*) AS count_rentals
FROM rental r
JOIN staff sf ON sf.staff_id = r.staff_id
JOIN store st ON st.store_id = sf.store_id
GROUP BY 1,
         2,
         3
ORDER BY 4 DESC;


Question 2
We would like to know who were our top 10 paying customers, how many payments they made on a monthly basis during 2007, and what was the amount of the monthly payments. Can you write a query to capture the customer name, month and year of payment, and total payment amount for each month by these top 10 paying customers?




Query:
WITH t1 AS
  (SELECT (first_name || ' ' || last_name) AS name,
          c.customer_id,
          p.amount,
          p.payment_date
   FROM customer AS c
   JOIN payment AS p ON c.customer_id = p.customer_id),
     t2 AS
  (SELECT t1.customer_id
   FROM t1
   GROUP BY 1
   ORDER BY SUM(t1.amount) DESC
   LIMIT 10)
SELECT DATE_TRUNC('month', t1.payment_date) AS pay_mon,
       t1.name,
       COUNT (*) AS pay_countpermon,
             SUM(t1.amount) AS total_pay_amount
FROM t1
JOIN t2 ON t1.customer_id = t2.customer_id
WHERE t1.payment_date BETWEEN '20070101' AND '20080101'
GROUP BY 1,
         2
ORDER BY 2;


Question 3
Finally, for each of these top 10 paying customers, I would like to find out the difference across their monthly payments during 2007. Please go ahead and write a query to compare the payment amounts in each successive month. Repeat this for each of these 10 paying customers. Also, it will be tremendously helpful if you can identify the customer name who paid the most difference in terms of payments.


Query: for chart 4
WITH t1 AS
  (SELECT (first_name || ' ' || last_name) AS name,
          c.customer_id,
          p.amount,
          p.payment_date
   FROM customer AS c
   JOIN payment AS p ON c.customer_id = p.customer_id),
     t2 AS
  (SELECT t1.customer_id
   FROM t1
   GROUP BY 1
   ORDER BY SUM(t1.amount) DESC
   LIMIT 10),
     t3 AS
  (SELECT t1.name,
          DATE_PART('month', t1.payment_date) AS payment_month,
          DATE_TRUNC('month', t1.payment_date) AS pay_mon,
          DATE_PART('year', t1.payment_date) AS payment_year,
          COUNT (*), SUM(t1.amount),
                     SUM(t1.amount) AS total,
                     LEAD(SUM(t1.amount)) OVER(PARTITION BY t1.name
                                               ORDER BY DATE_PART('month', t1.payment_date)) AS lead,
                     LEAD(SUM(t1.amount)) OVER(PARTITION BY t1.name
                                               ORDER BY DATE_PART('month', t1.payment_date)) - SUM(t1.amount) AS lead_dif
   FROM t1
   JOIN t2 ON t1.customer_id = t2.customer_id
   WHERE t1.payment_date BETWEEN '20070101' AND '20080101'
   GROUP BY 1,
            2,
            3,
            4
   ORDER BY 1,
            3,
            2,
            4)
SELECT t3.pay_mon,
       t3.name,
       t3.count,
       t3.lead,
       t3.total,
       t3.lead_dif,
       CASE
           WHEN t3.lead_dif =
                  (SELECT MAX(t3.lead_dif)
                   FROM t3
                   ORDER BY 1 DESC
                   LIMIT 1) THEN 'this is the maximum difference'
           ELSE NULL
       END AS is_max
FROM t3
ORDER BY 1;




















Query: chart1

SELECT c.name Name,  COUNT(*) Movie_count
FROM film f
JOIN film_category fc
ON fc.film_id = f.film_id
JOIN category c
ON fc.category_id = c.category_id
GROUP BY 1
ORDER BY 2 DESC



Qury: chart2
SELECT a.first_name||' '||a.last_name AS Name,  COUNT(*) Category_count
FROM film f
JOIN film_actor fa
ON fa.film_id = f.film_id
JOIN actor a
ON fa.actor_id = a.actor_id
GROUP BY 1
ORDER BY 2 DESC
LIMIT 10

Query: chart3
SELECT t.country, SUM(t.count_rent) sum_count
FROM(SELECT cy.city, co.country,  COUNT(*) count_rent
FROM customer c
JOIN address a
ON a.address_id = c.address_id
JOIN city cy
ON cy.city_id = a.city_id
JOIN country co
ON co.country_id = cy.country_id
JOIN rental r
ON c.customer_id = r.customer_id
JOIN inventory i
ON r.inventory_id = i.inventory_id
JOIN film f
ON i.film_id = f.film_id
JOIN film_category fc
ON fc.film_id = f.film_id
JOIN category ct
ON ct.category_id = fc.category_id
GROUP BY 1, 2
ORDER BY 3 DESC) t
GROUP BY 1
ORDER BY 2 DESC
LIMIT 10